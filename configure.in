#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(gravit, 0.4.2, gravit@slowchop.com)
AC_CONFIG_SRCDIR([config.c])
AC_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL

AC_PATH_XTRA

CPPFLAGS="$CPPFLAGS $X_CFLAGS"
LIBS="$LIBS $X_LIBS"

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([stdlib.h string.h sys/time.h sys/timeb.h termios.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([ftime memset mkdir pow select sqrt strerror strstr])

AM_PATH_SDL(1.2.6, [], [AC_MSG_ERROR(SDL is required for Gravit)])
CFLAGS="$CFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

# Checks for libraries.
AC_CHECK_LIB([GL], [glBegin], [], [AC_MSG_ERROR(GL is required)])
AC_CHECK_LIB([GLU], [gluLookAt], [], [AC_MSG_ERROR(GLU is required)])
AC_CHECK_LIB([SDL], [SDL_Init], [], [AC_MSG_ERROR(SDL is required)])
AC_CHECK_LIB([SDL_image], [IMG_Load], [], [AC_MSG_ERROR(SDL_image is required)])
AC_CHECK_LIB([SDL_ttf], [TTF_Init], [], [AC_MSG_ERROR(SDL_ttf is required)])

dnl Check for lua - borrowed from lighttpd
AC_MSG_CHECKING(if lua support is requested)
AC_ARG_WITH(lua, AC_HELP_STRING([--with-lua], [LUA support for custom spawn locations (recommended)]), [WITH_LUA=$withval], [WITH_LUA=yes])

AC_MSG_RESULT($WITH_LUA)
if test "$WITH_LUA" != "no"; then
 AM_CONDITIONAL(LUA, true)
 AC_PATH_PROG(LUACONFIG, lua-config)

 if test x"$LUACONFIG" != x; then
   LUA_CFLAGS=`$LUACONFIG --include`
   LUA_LIBS=`$LUACONFIG --libs --extralibs`
   AC_DEFINE([HAVE_LUA], [1], [liblua])
   AC_DEFINE([HAVE_LUA_H], [1], [lua.h])
 else
   AC_CHECK_LIB(lua, lua_open, [
     AC_CHECK_HEADERS([lua.h],[
       LUA_LIBS="-llua -llualib"
       AC_DEFINE([HAVE_LUA], [1], [liblua])
       AC_DEFINE([HAVE_LUA_H], [1], [lua.h])
     ])
   ])
 fi

 if test x"$LUA_LIBS" = x; then
   # try pkgconfig
   PKG_CHECK_MODULES(LUA, lua >= 5.0, [
     AC_DEFINE([HAVE_LUA], [1], [liblua])
     AC_DEFINE([HAVE_LUA_H], [1], [lua.h])
   ])
 fi

 AC_SUBST(LUA_CFLAGS)
 AC_SUBST(LUA_LIBS)
else
 AM_CONDITIONAL(LUA, false)
fi

AC_CONFIG_FILES([Makefile])
AC_OUTPUT

